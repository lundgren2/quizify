{"ast":null,"code":"import _classCallCheck from \"/Users/tobiaslundgren/Dev/Projects/socify-client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tobiaslundgren/Dev/Projects/socify-client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tobiaslundgren/Dev/Projects/socify-client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tobiaslundgren/Dev/Projects/socify-client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tobiaslundgren/Dev/Projects/socify-client/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tobiaslundgren/Dev/Projects/socify-client/client/src/components/Overview/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from '../ui/Container';\nimport Emoji from '../Emoji';\nimport Button, { StatusButton } from '../ui/Button';\nimport { getPlaylistAudioInfo } from '../../utils/service';\nimport { Box } from '@smooth-ui/core-em';\nimport styles from '../../styles'; // TODO: Refactor this chaos Component\n\nvar MOOD_HAPPY = {\n  EMOJI: '😎🤗',\n  COLOR: 'rgba(185, 36, 59, 1)'\n};\nvar MOOD_SAD = {\n  EMOJI: '😕😢',\n  COLOR: 'rgba(123, 31, 162, 1)'\n};\nvar MOOD_ANGRY = {\n  EMOJI: '😤😠',\n  COLOR: 'rgba(39, 38, 38, 1)'\n};\nvar MOOD_PARTY = {\n  EMOJI: '🥳🕺',\n  COLOR: 'rgba(220, 112, 43, 1)'\n};\nvar TEXT_1 = 'Single and ready to mingle';\nvar TEXT_2 = 'I want to hang out tonight';\nvar TEXT_3 = 'I like pets';\n\nvar Overview =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Overview, _Component);\n\n  function Overview() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Overview);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Overview)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      playlist: null,\n      showChat: true,\n      showOverview: false,\n      playlistAttributes: null,\n      text: '',\n      firstTime: true,\n      token: null\n    };\n\n    _this.getMood = function () {\n      var valence = _this.state.playlistAttributes.valence;\n      var energy = _this.state.playlistAttributes.energy;\n\n      if (valence >= 0.5 && energy >= 0.5) {\n        return MOOD_PARTY;\n      } else if (valence >= 0.5 && energy < 0.5) {\n        return MOOD_HAPPY;\n      } else if (valence < 0.5 && energy < 0.5) {\n        return MOOD_SAD;\n      } else {\n        return MOOD_ANGRY;\n      }\n    };\n\n    _this.linkToEmotion = function (emoji, color) {\n      _this.props.history.push({\n        pathname: '/emotion',\n        state: {\n          playlist: _this.state.playlist,\n          token: _this.state.token,\n          emoji: emoji,\n          color: color,\n          text: _this.state.text\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Overview, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var firstTime = this.props.location.state ? this.props.location.state.firstTime : true;\n\n      if (firstTime) {\n        this.state.firstTime && setTimeout(function () {\n          _this2.setState({\n            showChat: true,\n            firstTime: false\n          });\n        }, 2500);\n        this.state.firstTime && setTimeout(function () {\n          _this2.setState({\n            showOverview: true\n          });\n        }, 3000);\n      } else {\n        this.setState({\n          showChat: false,\n          showOverview: true\n        });\n      }\n\n      var playlist = null;\n      var token = null;\n\n      if (this.props.location.state) {\n        playlist = this.props.location.state.playlist;\n        token = this.props.location.state.token;\n      }\n\n      getPlaylistAudioInfo(playlist, token).then(function (playlistAttributes) {\n        _this2.setState({\n          playlistAttributes: playlistAttributes,\n          playlist: playlist,\n          token: token\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          playlist = _this$state.playlist,\n          playlistAttributes = _this$state.playlistAttributes,\n          showChat = _this$state.showChat,\n          showOverview = _this$state.showOverview;\n      var style = {\n        chatText: {\n          transition: 'opacity 1s ease-in-out',\n          opacity: showChat ? 1 : 0,\n          display: showOverview ? 'none' : 'block'\n        },\n        overview: {\n          transition: 'opacity 0.5s ease-in-out',\n          opacity: showOverview ? 1 : 0,\n          textAlign: 'left'\n        }\n      };\n\n      var renderChat = function renderChat() {\n        return React.createElement(\"div\", {\n          style: style.chatText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"Oh nice! \", React.createElement(Emoji, {\n          symbol: \"\\uD83E\\uDD73\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \"So you feel like your playlist\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }), ' ', React.createElement(\"b\", {\n          style: {\n            fontSize: 32\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, playlist && \"\".concat(playlist.name, \" ?\")), \"\\u200D\\u200D\\u200D\\u200D\"));\n      };\n\n      var emoji = '🤑';\n      var color = 'green';\n\n      if (playlistAttributes) {\n        var mood = this.getMood();\n        emoji = mood.EMOJI;\n        color = mood.COLOR;\n      }\n\n      var renderOverview = function renderOverview() {\n        var playlistName = playlist && playlist.name;\n        var playlistImg = playlist && playlist.images[0].url;\n        var playlistAttr = playlistAttributes ? playlistAttributes : {};\n        return React.createElement(\"div\", {\n          style: style.overview,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            color: styles.colors.gray,\n            fontSize: 28,\n            marginTop: 8,\n            paddingBottom: 4,\n            borderBottom: '1px solid #ccc',\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, \"Playlist information\"), React.createElement(\"h3\", {\n          style: {\n            margin: '14px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, playlistName), React.createElement(Box, {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          backgroundColor: \"#eee\",\n          alignItems: \"center\",\n          borderRadius: 12,\n          p: 1,\n          maxWidth: '100%',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, React.createElement(Box, {\n          borderRadius: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: playlistImg,\n          alt: playlistName,\n          height: \"120\",\n          style: {\n            borderRadius: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        })), React.createElement(Box, {\n          width: '100%',\n          px: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          style: {\n            fontSize: 16,\n            margin: '0px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, \"Tempo:\"), \" \", Math.floor(playlistAttr.tempo), \"bpm\"), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, \"Energy:\"), \" \", Math.floor(playlistAttr.energy * 100), \" %\"), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, \"Danceability:\"), ' ', Math.floor(playlistAttr.danceability * 100), \"%\"), React.createElement(\"li\", {\n          style: {\n            color: '#888',\n            fontSize: 12,\n            textTransform: 'uppercase',\n            fontWeight: 'bold',\n            marginTop: 4\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, \"Specs\")), playlistAttr.tempo > 115 ? React.createElement(Emoji, {\n          symbol: \"\\uD83C\\uDFCE\\uD83D\\uDCA8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }) : React.createElement(Emoji, {\n          symbol: \"\\uD83D\\uDC75\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }), playlistAttr.energy > 0.7 ? React.createElement(Emoji, {\n          symbol: \"\\uD83D\\uDD25\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }) : React.createElement(Emoji, {\n          symbol: \"\\u2615\\uFE0F\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          style: {\n            textAlign: 'center',\n            positin: 'relative'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          style: {\n            fontSize: 18\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, \"Your emoji today based on your playlist:\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          style: {\n            fontSize: 44\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, React.createElement(Emoji, {\n          symbol: emoji,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        })), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }), React.createElement(\"b\", {\n          style: {\n            color: '#555',\n            fontSize: 12,\n            textTransform: 'uppercase',\n            fontWeight: 'bold'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, \"Select your status\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          onClick: function onClick() {\n            return _this3.setState({\n              text: TEXT_1\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, React.createElement(StatusButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, TEXT_1)), React.createElement(\"div\", {\n          onClick: function onClick() {\n            return _this3.setState({\n              text: TEXT_2\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(StatusButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, TEXT_2)), React.createElement(\"div\", {\n          onClick: function onClick() {\n            return _this3.setState({\n              text: TEXT_3\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, React.createElement(StatusButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, TEXT_3)), React.createElement(\"div\", {\n          onClick: function onClick() {\n            return _this3.linkToEmotion(emoji, color);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, React.createElement(Button, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }, \"Find friends\")), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }), React.createElement(Link, {\n          to: {\n            pathname: '/dashboard'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            color: '#555',\n            fontSize: 12,\n            padding: 12,\n            textTransform: 'uppercase',\n            fontWeight: 'bold',\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, \"Change playlist\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        })));\n      };\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, renderChat(), renderOverview());\n    }\n  }]);\n\n  return Overview;\n}(Component);\n\nexport { Overview as default };","map":{"version":3,"sources":["/Users/tobiaslundgren/Dev/Projects/socify-client/client/src/components/Overview/index.js"],"names":["React","Component","Link","Container","Emoji","Button","StatusButton","getPlaylistAudioInfo","Box","styles","MOOD_HAPPY","EMOJI","COLOR","MOOD_SAD","MOOD_ANGRY","MOOD_PARTY","TEXT_1","TEXT_2","TEXT_3","Overview","state","playlist","showChat","showOverview","playlistAttributes","text","firstTime","token","getMood","valence","energy","linkToEmotion","emoji","color","props","history","push","pathname","location","setTimeout","setState","then","style","chatText","transition","opacity","display","overview","textAlign","renderChat","fontSize","name","mood","renderOverview","playlistName","playlistImg","images","url","playlistAttr","colors","gray","marginTop","paddingBottom","borderBottom","width","margin","borderRadius","Math","floor","tempo","danceability","textTransform","fontWeight","positin","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from '../ui/Container';\nimport Emoji from '../Emoji';\nimport Button, { StatusButton } from '../ui/Button';\nimport { getPlaylistAudioInfo } from '../../utils/service';\nimport { Box } from '@smooth-ui/core-em';\nimport styles from '../../styles';\n\n// TODO: Refactor this chaos Component\n\nconst MOOD_HAPPY = {\n  EMOJI: '😎🤗',\n  COLOR: 'rgba(185, 36, 59, 1)',\n};\nconst MOOD_SAD = {\n  EMOJI: '😕😢',\n  COLOR: 'rgba(123, 31, 162, 1)',\n};\nconst MOOD_ANGRY = {\n  EMOJI: '😤😠',\n  COLOR: 'rgba(39, 38, 38, 1)',\n};\nconst MOOD_PARTY = {\n  EMOJI: '🥳🕺',\n  COLOR: 'rgba(220, 112, 43, 1)',\n};\n\nconst TEXT_1 = 'Single and ready to mingle';\nconst TEXT_2 = 'I want to hang out tonight';\nconst TEXT_3 = 'I like pets';\n\nexport default class Overview extends Component {\n  // TODO: fix showChat to true\n  state = {\n    playlist: null,\n    showChat: true,\n    showOverview: false,\n    playlistAttributes: null,\n    text: '',\n    firstTime: true,\n    token: null,\n  };\n\n  componentDidMount() {\n    const firstTime = this.props.location.state\n      ? this.props.location.state.firstTime\n      : true;\n    if (firstTime) {\n      this.state.firstTime &&\n        setTimeout(() => {\n          this.setState({\n            showChat: true,\n            firstTime: false,\n          });\n        }, 2500);\n\n      this.state.firstTime &&\n        setTimeout(() => {\n          this.setState({\n            showOverview: true,\n          });\n        }, 3000);\n    } else {\n      this.setState({\n        showChat: false,\n        showOverview: true,\n      });\n    }\n\n    let playlist = null;\n    let token = null;\n    if (this.props.location.state) {\n      playlist = this.props.location.state.playlist;\n      token = this.props.location.state.token;\n    }\n    getPlaylistAudioInfo(playlist, token).then(playlistAttributes => {\n      this.setState({\n        playlistAttributes: playlistAttributes,\n        playlist: playlist,\n        token: token,\n      });\n    });\n  }\n\n  getMood = () => {\n    const valence = this.state.playlistAttributes.valence;\n    const energy = this.state.playlistAttributes.energy;\n    if (valence >= 0.5 && energy >= 0.5) {\n      return MOOD_PARTY;\n    } else if (valence >= 0.5 && energy < 0.5) {\n      return MOOD_HAPPY;\n    } else if (valence < 0.5 && energy < 0.5) {\n      return MOOD_SAD;\n    } else {\n      return MOOD_ANGRY;\n    }\n  };\n\n  linkToEmotion = (emoji, color) => {\n    this.props.history.push({\n      pathname: '/emotion',\n      state: {\n        playlist: this.state.playlist,\n        token: this.state.token,\n        emoji: emoji,\n        color: color,\n        text: this.state.text,\n      },\n    });\n  };\n\n  render() {\n    const { playlist, playlistAttributes, showChat, showOverview } = this.state;\n    const style = {\n      chatText: {\n        transition: 'opacity 1s ease-in-out',\n        opacity: showChat ? 1 : 0,\n        display: showOverview ? 'none' : 'block',\n      },\n      overview: {\n        transition: 'opacity 0.5s ease-in-out',\n        opacity: showOverview ? 1 : 0,\n        textAlign: 'left',\n      },\n    };\n    const renderChat = () => (\n      <div style={style.chatText}>\n        <h2>\n          Oh nice! <Emoji symbol=\"🥳\" />\n        </h2>\n        <p>\n          So you feel like your playlist\n          <br />{' '}\n          <b style={{ fontSize: 32 }}>{playlist && `${playlist.name} ?`}</b>‍‍‍‍\n        </p>\n      </div>\n    );\n\n    let emoji = '🤑';\n    let color = 'green';\n    if (playlistAttributes) {\n      const mood = this.getMood();\n      emoji = mood.EMOJI;\n      color = mood.COLOR;\n    }\n\n    const renderOverview = () => {\n      const playlistName = playlist && playlist.name;\n      const playlistImg = playlist && playlist.images[0].url;\n      const playlistAttr = playlistAttributes ? playlistAttributes : {};\n\n      return (\n        <div style={style.overview}>\n          <div\n            style={{\n              color: styles.colors.gray,\n              fontSize: 28,\n              marginTop: 8,\n              paddingBottom: 4,\n              borderBottom: '1px solid #ccc',\n              width: '100%',\n            }}\n          >\n            Playlist information\n          </div>\n          <h3 style={{ margin: '14px 0' }}>{playlistName}</h3>\n          <Box\n            display=\"flex\"\n            flexDirection=\"row\"\n            justifyContent=\"space-between\"\n            backgroundColor=\"#eee\"\n            alignItems=\"center\"\n            borderRadius={12}\n            p={1}\n            maxWidth={'100%'}\n          >\n            <Box borderRadius={12}>\n              <img\n                src={playlistImg}\n                alt={playlistName}\n                height=\"120\"\n                style={{ borderRadius: 8 }}\n              />\n            </Box>\n            <Box width={'100%'} px={2}>\n              <ul style={{ fontSize: 16, margin: '0px 0' }}>\n                <li>\n                  <b>Tempo:</b> {Math.floor(playlistAttr.tempo)}bpm\n                </li>\n                <li>\n                  <b>Energy:</b> {Math.floor(playlistAttr.energy * 100)} %\n                </li>\n                <li>\n                  <b>Danceability:</b>{' '}\n                  {Math.floor(playlistAttr.danceability * 100)}%\n                </li>\n                <li\n                  style={{\n                    color: '#888',\n                    fontSize: 12,\n                    textTransform: 'uppercase',\n                    fontWeight: 'bold',\n                    marginTop: 4,\n                  }}\n                >\n                  Specs\n                </li>\n              </ul>\n              {playlistAttr.tempo > 115 ? (\n                <Emoji symbol=\"🏎💨\" />\n              ) : (\n                <Emoji symbol=\"👵\" />\n              )}\n              {playlistAttr.energy > 0.7 ? (\n                <Emoji symbol=\"🔥\" />\n              ) : (\n                <Emoji symbol=\"☕️\" />\n              )}\n            </Box>\n          </Box>\n          <div style={{ textAlign: 'center', positin: 'relative' }}>\n            <b style={{ fontSize: 18 }}>\n              Your emoji today based on your playlist:\n              <br />\n            </b>\n            <span style={{ fontSize: 44 }}>\n              <Emoji symbol={emoji} />\n            </span>\n            <br />\n            <b\n              style={{\n                color: '#555',\n                fontSize: 12,\n                textTransform: 'uppercase',\n                fontWeight: 'bold',\n              }}\n            >\n              Select your status\n            </b>\n            <br />\n            <br />\n          </div>\n          <div onClick={() => this.setState({ text: TEXT_1 })}>\n            <StatusButton>{TEXT_1}</StatusButton>\n          </div>\n          <div onClick={() => this.setState({ text: TEXT_2 })}>\n            <StatusButton>{TEXT_2}</StatusButton>\n          </div>\n          <div onClick={() => this.setState({ text: TEXT_3 })}>\n            <StatusButton>{TEXT_3}</StatusButton>\n          </div>\n          <div onClick={() => this.linkToEmotion(emoji, color)}>\n            <Button>Find friends</Button>\n          </div>\n          <br />\n          <Link\n            to={{\n              pathname: '/dashboard',\n            }}\n          >\n            <span\n              style={{\n                color: '#555',\n                fontSize: 12,\n                padding: 12,\n                textTransform: 'uppercase',\n                fontWeight: 'bold',\n                textAlign: 'center',\n              }}\n            >\n              Change playlist\n            </span>\n            <br />\n          </Link>\n        </div>\n      );\n    };\n\n    return (\n      <Container>\n        {renderChat()}\n        {renderOverview()}\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}